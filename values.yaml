#
# IMPORTANT NOTE
#
# This chart inherits from k8s-at-home common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

hookshot:
  secrets:
    registration:
      # Example: https://github.com/Half-Shot/matrix-hookshot/blob/main/registration.sample.yml
      id: matrix-hookshot # This can be anything, but must be unique within your homeserver
      as_token: aaaaaaaaaa # This again can be a random string
      hs_token: aaaaaaaaaa # ..as can this
      namespaces:
        rooms: []
        users:
          - regex: "@_github_.*:foobar" # Where foobar is your homeserver's domain
            exclusive: true
        aliases:
          - regex: "#github_.+:foobar"  # Where foobar is your homeserver's domain
            exclusive: true

      sender_localpart: hookshot
      url: "http://localhost:9993" # This should match the bridge.port in your config file
      rate_limited: false


    # A passkey used to encrypt tokens stored inside the bridge.
    # Run openssl genpkey -out passkey.pem -outform PEM -algorithm RSA -pkeyopt rsa_keygen_bits:4096 to generate
    passkey: |
      -----BEGIN PRIVATE KEY-----
      MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQDiXXjydJDs2cR2
      ....
      zx2M/VkfaadHrrUpZF5cYI6bhOrA6AOV
      -----END PRIVATE KEY-----

  # Config documentation: https://half-shot.github.io/matrix-hookshot/setup/sample-configuration.html#sample-configuration
  config:
      # This is an example configuration file

    bridge:
      # Basic homeserver configuration
      #
      domain: example.com
      url: http://localhost:8008
      mediaUrl: http://example.com
      port: 9993
      bindAddress: 127.0.0.1
    github:
      # (Optional) Configure this to enable GitHub support
      #
      auth:
        # Authentication for the GitHub App.
        #
        id: 123
        privateKeyFile: github-key.pem
      webhook:
        # Webhook settings for the GitHub app.
        #
        secret: secrettoken
      oauth:
        # (Optional) Settings for allowing users to sign in via OAuth.
        #
        client_id: foo
        client_secret: bar
        redirect_uri: https://example.com/bridge_oauth/
      defaultOptions:
        # (Optional) Default options for GitHub connections.
        #
        showIssueRoomLink: false
    gitlab:
      # (Optional) Configure this to enable GitLab support
      #
      instances:
        gitlab.com:
          url: https://gitlab.com
      webhook:
        secret: secrettoken
    jira:
      # (Optional) Configure this to enable Jira support
      #
      webhook:
        secret: secrettoken
      oauth:
        client_id: foo
        client_secret: bar
        redirect_uri: https://example.com/bridge_oauth/
    generic:
      # (Optional) Support for generic webhook events. `allowJsTransformationFunctions` will allow users to write short transformation snippets in code, and thus is unsafe in untrusted environments
      #
      enabled: false
      urlPrefix: https://example.com/mywebhookspath/
      allowJsTransformationFunctions: false
      userIdPrefix: webhooks_
    figma:
      # (Optional) Configure this to enable Figma support
      #
      publicUrl: https://example.com/hookshot/
      instances:
        your-instance:
          teamId: your-team-id
          accessToken: your-personal-access-token
          passcode: your-webhook-passcode
    provisioning:
      # (Optional) Provisioning API for integration managers
      #
      secret: "!secretToken"
    passFile:
      # A passkey used to encrypt tokens stored inside the bridge.
      # Run openssl genpkey -out passkey.pem -outform PEM -algorithm RSA -pkeyopt rsa_keygen_bits:4096 to generate
      #
      passkey.pem
    bot:
      # (Optional) Define profile information for the bot user
      #
      displayname: GitHub Bot
      avatar: mxc://half-shot.uk/2876e89ccade4cb615e210c458e2a7a6883fe17d
    metrics:
      # (Optional) Prometheus metrics support
      #
      enabled: true
    queue:
      # (Optional) Message queue / cache configuration options for large scale deployments
      #
      monolithic: true
      port: 6379
      host: localhost
    logging:
      # (Optional) Logging settings. You can have a severity debug,info,warn,error
      #
      level: info
    permissions:
      # (Optional) Permissions for using the bridge. See docs/setup.md#permissions for help
      #
      - actor: example.com
        services:
          - service: "*"
            level: admin
    listeners:
      # (Optional) HTTP Listener configuration.
      # Bind resource endpoints to ports and addresses.
      # 'port' must be specified. Each listener must listen on a unique port.
      # 'bindAddress' will default to '127.0.0.1' if not specified, which may not be suited to Docker environments.
      # 'resources' may be any of webhooks, widgets, metrics, provisioning
      #
      - port: 9000
        bindAddress: 0.0.0.0
        resources:
          - webhooks
      - port: 9001
        bindAddress: 127.0.0.1
        resources:
          - metrics
          - provisioning


image:
  # -- image repository
  repository: halfshot/matrix-hookshot
  # -- image tag
  tag: 1.1.0
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        enabled: false
      appservice:
        enabled: true
        port: 9993
      webhook:
        enabled: true
        port: 9000
      metrics:
        enabled: true
        port: 9002

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false
